{
  "info": {
    "name": "Invoice Testing Collection",
    "description": "Comprehensive testing collection for the Invoice usecase",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Invoice Workflow - Start",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"customerId\": \"customer-123\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/invoice/workflow/start",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "workflow", "start"]
        },
        "description": "Start a new invoice workflow for a customer"
      },
      "response": []
    },
    {
      "name": "Invoice Workflow - Scheduled",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"customerId\": \"customer-456\",\n  \"scheduledAt\": \"2024-12-25T10:00:00Z\",\n  \"dateFrom\": \"2024-12-01\",\n  \"dateTo\": \"2024-12-31\",\n  \"workflowId\": \"workflow-456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/invoice/workflow/scheduled",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "workflow", "scheduled"]
        },
        "description": "Create a scheduled invoice workflow"
      },
      "response": []
    },
    {
      "name": "Invoice Workflow - Recurring",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"customerId\": \"customer-789\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-789\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/invoice/workflow/recurring",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "workflow", "recurring"]
        },
        "description": "Create a recurring invoice workflow"
      },
      "response": []
    },
    {
      "name": "Email Workflow - Scheduled",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"customerId\": \"customer-999\",\n  \"invoiceId\": \"invoice-123\",\n  \"scheduledAt\": \"2024-12-25T10:00:00Z\",\n  \"workflowId\": \"workflow-999\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/invoice/email/scheduled",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "email", "scheduled"]
        },
        "description": "Create a scheduled email workflow"
      },
      "response": []
    },
    {
      "name": "Get Customer Invoice Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/invoice/tasks/customer-123",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "tasks", "customer-123"]
        },
        "description": "Get all invoice tasks for a specific customer"
      },
      "response": []
    },
    {
      "name": "Get Invoice Workflow Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/invoice/status/customer-123",
          "host": ["{{baseUrl}}"],
          "path": ["invoice", "status", "customer-123"]
        },
        "description": "Get the status of invoice workflows for a customer"
      },
      "response": []
    },
    {
      "name": "Get All Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        },
        "description": "Get all tasks in the system"
      },
      "response": []
    },
    {
      "name": "Get Tasks by Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks?status=pending",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"],
          "query": [
            {
              "key": "status",
              "value": "pending"
            }
          ]
        },
        "description": "Get tasks filtered by status"
      },
      "response": []
    },
    {
      "name": "Get Task by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        },
        "description": "Get a specific task by ID"
      },
      "response": []
    },
    {
      "name": "Retry Task",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}/retry",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}", "retry"]
        },
        "description": "Retry a failed task"
      },
      "response": []
    },
    {
      "name": "Cancel Task",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}/cancel",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}", "cancel"]
        },
        "description": "Cancel a pending task"
      },
      "response": []
    },
    {
      "name": "Create Compensation Task",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}/compensate",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}", "compensate"]
        },
        "description": "Create a compensation task for a failed task"
      },
      "response": []
    },
    {
      "name": "Get Queue Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/queue-manager/status",
          "host": ["{{baseUrl}}"],
          "path": ["queue-manager", "status"]
        },
        "description": "Get the overall queue status"
      },
      "response": []
    },
    {
      "name": "Enqueue Task",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com\",\n    \"method\": \"GET\"\n  },\n  \"workflowId\": \"workflow-test\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/queue-manager/enqueue",
          "host": ["{{baseUrl}}"],
          "path": ["queue-manager", "enqueue"]
        },
        "description": "Manually enqueue a task"
      },
      "response": []
    },
    {
      "name": "Get Scheduled Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
          "host": ["{{baseUrl}}"],
          "path": ["scheduler", "tasks", "scheduled"]
        },
        "description": "Get all scheduled tasks"
      },
      "response": []
    },
    {
      "name": "Create Scheduled Task",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com\"\n  },\n  \"scheduledAt\": \"2024-12-25T10:00:00Z\",\n  \"workflowId\": \"workflow-scheduled\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
          "host": ["{{baseUrl}}"],
          "path": ["scheduler", "tasks", "scheduled"]
        },
        "description": "Create a scheduled task"
      },
      "response": []
    },
    {
      "name": "Create Recurring Task",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"source\": \"database\"\n  },\n  \"cronExpression\": \"0 */6 * * *\",\n  \"workflowId\": \"workflow-recurring\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/scheduler/tasks/recurring",
          "host": ["{{baseUrl}}"],
          "path": ["scheduler", "tasks", "recurring"]
        },
        "description": "Create a recurring task"
      },
      "response": []
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Check application health"
      },
      "response": []
    },
    {
      "name": "Seed Database",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"workflows\": 3,\n  \"tasksPerType\": 5,\n  \"customers\": 10\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/seeder/seed",
          "host": ["{{baseUrl}}"],
          "path": ["seeder", "seed"]
        },
        "description": "Seed the database with test data"
      },
      "response": []
    },
    {
      "name": "Clear Database",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/seeder/clear",
          "host": ["{{baseUrl}}"],
          "path": ["seeder", "clear"]
        },
        "description": "Clear all data from the database"
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3030",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "task-uuid-here",
      "type": "string"
    }
  ]
}
