{
  "info": {
    "_postman_id": "queue-worker-poc-collection",
    "name": "Queue Worker POC API",
    "description": "Complete API collection for the Queue Worker POC application. This includes all endpoints for task management, invoice workflows, scheduling, queue management, and health checks.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check the health status of the application and its dependencies"
          },
          "response": []
        }
      ],
      "description": "Health monitoring endpoints"
    },
    {
      "name": "Task Management",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/data\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Authorization\": \"Bearer {{apiToken}}\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task with specified type and payload"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Retrieve a specific task by its ID"
          },
          "response": []
        },
        {
          "name": "Retry Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/retry",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "retry"]
            },
            "description": "Retry a failed task by setting it back to pending status"
          },
          "response": []
        },
        {
          "name": "Cancel Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "cancel"]
            },
            "description": "Cancel a pending task"
          },
          "response": []
        },
        {
          "name": "Compensate Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/compensate",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "compensate"]
            },
            "description": "Create a compensation task for a failed task"
          },
          "response": []
        }
      ],
      "description": "Task management operations"
    },
    {
      "name": "Queue Manager",
      "item": [
        {
          "name": "Get Queue Manager Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/status",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "status"]
            },
            "description": "Get detailed queue status with health indicators"
          },
          "response": []
        },
        {
          "name": "Check if Queue is Overloaded",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/overloaded",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "overloaded"]
            },
            "description": "Check if the queue is currently overloaded"
          },
          "response": []
        },
        {
          "name": "Get Failed Tasks Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/failed-count",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "failed-count"]
            },
            "description": "Get the count of failed tasks"
          },
          "response": []
        },
        {
          "name": "Get Pending Tasks Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/pending-count",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "pending-count"]
            },
            "description": "Get the count of pending tasks"
          },
          "response": []
        }
      ],
      "description": "Advanced queue management and monitoring"
    },
    {
      "name": "Invoice Workflows",
      "item": [
        {
          "name": "Start Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/start",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "start"]
            },
            "description": "Start an immediate invoice workflow for a customer"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "scheduled"]
            },
            "description": "Create a scheduled invoice workflow"
          },
          "response": []
        },
        {
          "name": "Create Recurring Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "recurring"]
            },
            "description": "Create a recurring invoice workflow using cron expression"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Email Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"invoiceId\": \"invoice-123\",\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/email/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "email", "scheduled"]
            },
            "description": "Schedule an email to be sent for a specific invoice"
          },
          "response": []
        },
        {
          "name": "Get Customer Invoice Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/tasks/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "tasks", "{{customerId}}"]
            },
            "description": "Get all invoice-related tasks for a specific customer"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "status", "{{customerId}}"]
            },
            "description": "Get the status of invoice workflows for a customer"
          },
          "response": []
        }
      ],
      "description": "Invoice workflow management and monitoring"
    },
    {
      "name": "Scheduler",
      "item": [
        {
          "name": "Create Scheduled Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/data\",\n    \"method\": \"GET\"\n  },\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Create a task that will be executed at a specific time"
          },
          "response": []
        },
        {
          "name": "Create Recurring Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"dataSource\": \"daily-reports\",\n    \"processType\": \"aggregation\"\n  },\n  \"cronExpression\": \"0 2 * * *\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "recurring"]
            },
            "description": "Create a recurring task using cron expression"
          },
          "response": []
        },
        {
          "name": "Get Scheduled Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Get all scheduled tasks"
          },
          "response": []
        }
      ],
      "description": "Task scheduling operations"
    },
    {
      "name": "Examples",
      "item": [
        {
          "name": "Create HTTP Request Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Accept\": \"application/json\"\n    },\n    \"timeout\": 5000\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create an HTTP request task to fetch data from an external API"
          },
          "response": []
        },
        {
          "name": "Create Data Processing Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"dataSource\": \"customer-orders\",\n    \"processType\": \"aggregation\",\n    \"filters\": {\n      \"dateRange\": {\n        \"from\": \"2024-01-01\",\n        \"to\": \"2024-01-31\"\n      },\n      \"status\": \"completed\"\n    },\n    \"outputFormat\": \"json\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create a data processing task for aggregating customer orders"
          },
          "response": []
        },
        {
          "name": "Create Fetch Orders Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"fetch_orders\",\n  \"payload\": {\n    \"customerId\": \"customer-123\",\n    \"dateFrom\": \"2024-01-01\",\n    \"dateTo\": \"2024-01-31\",\n    \"ninoxConfig\": {\n      \"baseUrl\": \"https://your-ninox-instance.com\",\n      \"apiKey\": \"{{ninoxApiKey}}\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create a task to fetch orders from Ninox database"
          },
          "response": []
        },
        {
          "name": "Create Invoice Workflow - Complete Example",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"invoice-workflow-2024-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/start",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "start"]
            },
            "description": "Complete example: Start a full invoice workflow that will fetch orders, create invoice, generate PDF, and send email"
          },
          "response": []
        },
        {
          "name": "Daily Recurring Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"{{$timestamp}}\",\n  \"dateTo\": \"{{$timestamp}}\",\n  \"workflowId\": \"daily-invoice-workflow\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "recurring"]
            },
            "description": "Example: Create a daily recurring invoice workflow that runs at midnight every day"
          },
          "response": []
        },
        {
          "name": "Weekly Email Reminder",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"invoiceId\": \"invoice-123\",\n  \"scheduledAt\": \"2024-01-20T10:00:00Z\",\n  \"workflowId\": \"weekly-email-reminder\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/email/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "email", "scheduled"]
            },
            "description": "Example: Schedule a weekly email reminder for an invoice"
          },
          "response": []
        }
      ],
      "description": "Practical examples for common use cases"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3030/api",
      "type": "string"
    }
  ]
}
