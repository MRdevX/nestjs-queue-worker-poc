{
  "info": {
    "name": "Queue Worker POC - Complete API Collection",
    "description": "Complete API collection for the Queue Worker POC system including all endpoints for tasks, workflows, invoices, queue management, scheduling, and system operations.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health & System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check system health status"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Database Seeder",
      "item": [
        {
          "name": "Seed Database",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": 2,\n  \"tasksPerType\": 3,\n  \"customers\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "seed"]
            },
            "description": "Seed the database with test data"
          },
          "response": []
        },
        {
          "name": "Clear Database",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/seeder/clear",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "clear"]
            },
            "description": "Clear all data from the database"
          },
          "response": []
        },
        {
          "name": "Reset Database",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": 1,\n  \"tasksPerType\": 2,\n  \"customers\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/reset",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "reset"]
            },
            "description": "Clear and reseed the database"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/test\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Content-Type\": \"application/json\"\n    }\n  },\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task"
          },
          "response": []
        },
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Get all tasks"
          },
          "response": []
        },
        {
          "name": "Get Tasks with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks?status=pending&type=http_request",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "type",
                  "value": "http_request"
                }
              ]
            },
            "description": "Get tasks with filters"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Get a specific task by ID"
          },
          "response": []
        },
        {
          "name": "Get Task with Relations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}?relations=workflow,logs",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"],
              "query": [
                {
                  "key": "relations",
                  "value": "workflow,logs"
                }
              ]
            },
            "description": "Get a task with related data"
          },
          "response": []
        },
        {
          "name": "Retry Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/retry",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "retry"]
            },
            "description": "Retry a failed task"
          },
          "response": []
        },
        {
          "name": "Cancel Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "cancel"]
            },
            "description": "Cancel a pending task"
          },
          "response": []
        },
        {
          "name": "Compensate Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/compensate",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "compensate"]
            },
            "description": "Create a compensation task for a failed task"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Workflows",
      "item": [
        {
          "name": "Create Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Workflow\",\n  \"definition\": {\n    \"initialTask\": {\n      \"type\": \"http_request\",\n      \"payload\": {\n        \"url\": \"https://api.example.com/test\",\n        \"method\": \"GET\"\n      }\n    },\n    \"transitions\": {\n      \"http_request\": {\n        \"type\": \"data_processing\",\n        \"payload\": {\n          \"source\": \"api_response\"\n        }\n      }\n    }\n  },\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workflows",
              "host": ["{{baseUrl}}"],
              "path": ["workflows"]
            },
            "description": "Create a new workflow"
          },
          "response": []
        },
        {
          "name": "Get All Workflows",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows",
              "host": ["{{baseUrl}}"],
              "path": ["workflows"]
            },
            "description": "Get all workflows"
          },
          "response": []
        },
        {
          "name": "Get Active Workflows",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows?active=true",
              "host": ["{{baseUrl}}"],
              "path": ["workflows"],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                }
              ]
            },
            "description": "Get only active workflows"
          },
          "response": []
        },
        {
          "name": "Get Workflow by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Get a specific workflow by ID"
          },
          "response": []
        },
        {
          "name": "Get Workflow with Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/with-tasks",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "with-tasks"]
            },
            "description": "Get a workflow with all its tasks"
          },
          "response": []
        },
        {
          "name": "Update Workflow",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Workflow Name\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Update a workflow"
          },
          "response": []
        },
        {
          "name": "Delete Workflow",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Delete a workflow"
          },
          "response": []
        },
        {
          "name": "Start Workflow",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/start",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "start"]
            },
            "description": "Start a workflow execution"
          },
          "response": []
        },
        {
          "name": "Activate Workflow",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/activate",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "activate"]
            },
            "description": "Activate a workflow"
          },
          "response": []
        },
        {
          "name": "Deactivate Workflow",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/deactivate",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "deactivate"]
            },
            "description": "Deactivate a workflow"
          },
          "response": []
        },
        {
          "name": "Get Workflow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "status"]
            },
            "description": "Get detailed status of a workflow"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Invoice Workflows",
      "item": [
        {
          "name": "Start Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/start",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "start"]
            },
            "description": "Start an invoice generation workflow"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"scheduledAt\": \"{{scheduledAt}}\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "scheduled"]
            },
            "description": "Create a scheduled invoice workflow"
          },
          "response": []
        },
        {
          "name": "Create Recurring Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "recurring"]
            },
            "description": "Create a recurring invoice workflow"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Email Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"invoiceId\": \"{{invoiceId}}\",\n  \"scheduledAt\": \"{{scheduledAt}}\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/email/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "email", "scheduled"]
            },
            "description": "Create a scheduled email workflow"
          },
          "response": []
        },
        {
          "name": "Get Customer Invoice Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/tasks/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "tasks", "{{customerId}}"]
            },
            "description": "Get all invoice tasks for a customer"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "status", "{{customerId}}"]
            },
            "description": "Get detailed status of invoice workflows for a customer"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Queue Management",
      "item": [
        {
          "name": "Enqueue Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/test\",\n    \"method\": \"GET\"\n  },\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/queue-manager/enqueue",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "enqueue"]
            },
            "description": "Enqueue a task directly"
          },
          "response": []
        },
        {
          "name": "Retry Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/retry/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "retry", "{{taskId}}"]
            },
            "description": "Retry a failed task through queue manager"
          },
          "response": []
        },
        {
          "name": "Get Queue Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/status",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "status"]
            },
            "description": "Get overall queue status and health"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Scheduler",
      "item": [
        {
          "name": "Create Scheduled Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/scheduled\",\n    \"method\": \"POST\"\n  },\n  \"scheduledAt\": \"{{scheduledAt}}\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Create a scheduled task"
          },
          "response": []
        },
        {
          "name": "Create Recurring Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"source\": \"database\",\n    \"operation\": \"cleanup\"\n  },\n  \"cronExpression\": \"0 2 * * *\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "recurring"]
            },
            "description": "Create a recurring task with cron expression"
          },
          "response": []
        },
        {
          "name": "Get Scheduled Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Get all scheduled tasks"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Task Examples",
      "item": [
        {
          "name": "Create HTTP Request Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create an HTTP request task example"
          },
          "response": []
        },
        {
          "name": "Create Data Processing Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"source\": \"database\",\n    \"operation\": \"aggregate\",\n    \"filters\": {\n      \"dateFrom\": \"2024-01-01\",\n      \"dateTo\": \"2024-01-31\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a data processing task example"
          },
          "response": []
        },
        {
          "name": "Create Fetch Orders Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"fetch_orders\",\n  \"payload\": {\n    \"customerId\": \"{{customerId}}\",\n    \"dateFrom\": \"2024-01-01\",\n    \"dateTo\": \"2024-01-31\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a fetch orders task example"
          },
          "response": []
        },
        {
          "name": "Create Compensation Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"compensation\",\n  \"payload\": {\n    \"originalTaskId\": \"{{taskId}}\",\n    \"originalTaskType\": \"http_request\",\n    \"reason\": \"API timeout\",\n    \"compensationAction\": \"rollback\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a compensation task example"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3030",
      "type": "string"
    }
  ]
}
