{
  "info": {
    "_postman_id": "queue-worker-poc-collection",
    "name": "Queue Worker POC API",
    "description": "Complete API collection for the Queue Worker POC application. This includes all endpoints for task management, invoice workflows, scheduling, queue management, fault management, workflow management, health checks, and database seeding.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check the health status of the application and its dependencies"
          },
          "response": []
        }
      ],
      "description": "Health monitoring endpoints"
    },
    {
      "name": "Database Seeder",
      "item": [
        {
          "name": "Seed Database (Default)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/seeder/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "seed"]
            },
            "description": "Seed the database with default configuration (3 workflows, 5 tasks per type, 10 customers)"
          },
          "response": []
        },
        {
          "name": "Seed Database (Light)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": 1,\n  \"tasksPerType\": 2,\n  \"customers\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "seed"]
            },
            "description": "Seed the database with light configuration for quick testing (1 workflow, 2 tasks per type, 3 customers)"
          },
          "response": []
        },
        {
          "name": "Seed Database (Heavy)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": 5,\n  \"tasksPerType\": 10,\n  \"customers\": 20\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "seed"]
            },
            "description": "Seed the database with heavy configuration for stress testing (5 workflows, 10 tasks per type, 20 customers)"
          },
          "response": []
        },
        {
          "name": "Seed Database (Custom)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": {{seederWorkflows}},\n  \"tasksPerType\": {{seederTasksPerType}},\n  \"customers\": {{seederCustomers}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "seed"]
            },
            "description": "Seed the database with custom configuration using environment variables"
          },
          "response": []
        },
        {
          "name": "Clear Database",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/seeder/clear",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "clear"]
            },
            "description": "Clear all seeded data from the database"
          },
          "response": []
        },
        {
          "name": "Reset Database (Default)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/seeder/reset",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "reset"]
            },
            "description": "Clear the database and reseed with default configuration (3 workflows, 5 tasks per type, 10 customers)"
          },
          "response": []
        },
        {
          "name": "Reset Database (Light)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": 1,\n  \"tasksPerType\": 2,\n  \"customers\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/reset",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "reset"]
            },
            "description": "Clear the database and reseed with light configuration for quick testing"
          },
          "response": []
        },
        {
          "name": "Reset Database (Custom)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workflows\": {{seederWorkflows}},\n  \"tasksPerType\": {{seederTasksPerType}},\n  \"customers\": {{seederCustomers}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/seeder/reset",
              "host": ["{{baseUrl}}"],
              "path": ["seeder", "reset"]
            },
            "description": "Clear the database and reseed with custom configuration using environment variables"
          },
          "response": []
        }
      ],
      "description": "Database seeding operations for testing"
    },
    {
      "name": "Task Management",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/data\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Authorization\": \"Bearer {{apiToken}}\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task with specified type and payload"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Retrieve a specific task by its ID"
          },
          "response": []
        },
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Get all tasks in the database"
          },
          "response": []
        },
        {
          "name": "Retry Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/retry",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "retry"]
            },
            "description": "Retry a failed task by setting it back to pending status"
          },
          "response": []
        },
        {
          "name": "Cancel Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "cancel"]
            },
            "description": "Cancel a pending task"
          },
          "response": []
        },
        {
          "name": "Compensate Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/compensate",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "compensate"]
            },
            "description": "Create a compensation task for a failed task"
          },
          "response": []
        }
      ],
      "description": "Task management operations"
    },
    {
      "name": "Queue Manager",
      "item": [
        {
          "name": "Get Queue Manager Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/status",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "status"]
            },
            "description": "Get detailed queue status with health indicators"
          },
          "response": []
        },
        {
          "name": "Check if Queue is Overloaded",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/overloaded",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "overloaded"]
            },
            "description": "Check if the queue is currently overloaded"
          },
          "response": []
        },
        {
          "name": "Get Failed Tasks Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/failed-count",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "failed-count"]
            },
            "description": "Get the count of failed tasks"
          },
          "response": []
        },
        {
          "name": "Get Pending Tasks Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/queue-manager/pending-count",
              "host": ["{{baseUrl}}"],
              "path": ["queue-manager", "pending-count"]
            },
            "description": "Get the count of pending tasks"
          },
          "response": []
        }
      ],
      "description": "Advanced queue management and monitoring"
    },
    {
      "name": "Invoice Workflows",
      "item": [
        {
          "name": "Start Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/start",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "start"]
            },
            "description": "Start an immediate invoice workflow for a customer"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "scheduled"]
            },
            "description": "Create a scheduled invoice workflow"
          },
          "response": []
        },
        {
          "name": "Create Recurring Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "recurring"]
            },
            "description": "Create a recurring invoice workflow using cron expression"
          },
          "response": []
        },
        {
          "name": "Create Scheduled Email Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"invoiceId\": \"invoice-123\",\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/email/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "email", "scheduled"]
            },
            "description": "Schedule an email to be sent for a specific invoice"
          },
          "response": []
        },
        {
          "name": "Get Customer Invoice Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/tasks/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "tasks", "{{customerId}}"]
            },
            "description": "Get all invoice-related tasks for a specific customer"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "status", "{{customerId}}"]
            },
            "description": "Get the status of invoice workflows for a customer"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflows",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/workflows",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflows"]
            },
            "description": "Get all invoice workflows with optional filtering by customer and active status"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflow by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflows", "{{workflowId}}"]
            },
            "description": "Get a specific invoice workflow by ID"
          },
          "response": []
        },
        {
          "name": "Get Invoice Workflow Status by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/workflows/{{workflowId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflows", "{{workflowId}}", "status"]
            },
            "description": "Get detailed status of a specific invoice workflow"
          },
          "response": []
        },
        {
          "name": "Cancel Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/workflows/{{workflowId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflows", "{{workflowId}}", "cancel"]
            },
            "description": "Cancel an invoice workflow and all its pending tasks"
          },
          "response": []
        },
        {
          "name": "Get Invoice Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/stats",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "stats"]
            },
            "description": "Get comprehensive invoice workflow statistics"
          },
          "response": []
        },
        {
          "name": "Get Customers with Invoices",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoice/customers",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "customers"]
            },
            "description": "Get all customers who have invoice workflows with detailed statistics"
          },
          "response": []
        }
      ],
      "description": "Invoice workflow management and monitoring"
    },
    {
      "name": "Scheduler",
      "item": [
        {
          "name": "Create Scheduled Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://api.example.com/data\",\n    \"method\": \"GET\"\n  },\n  \"scheduledAt\": \"2024-01-15T10:00:00Z\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Create a task that will be executed at a specific time"
          },
          "response": []
        },
        {
          "name": "Create Recurring Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"dataSource\": \"daily-reports\",\n    \"processType\": \"aggregation\"\n  },\n  \"cronExpression\": \"0 2 * * *\",\n  \"workflowId\": \"workflow-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "recurring"]
            },
            "description": "Create a recurring task using cron expression"
          },
          "response": []
        },
        {
          "name": "Get Scheduled Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/scheduler/tasks/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["scheduler", "tasks", "scheduled"]
            },
            "description": "Get all scheduled tasks"
          },
          "response": []
        }
      ],
      "description": "Task scheduling operations"
    },
    {
      "name": "Fault Management",
      "item": [
        {
          "name": "Retry Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/retry/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "retry", "{{taskId}}"]
            },
            "description": "Retry a failed task with exponential backoff"
          },
          "response": []
        },
        {
          "name": "Compensate Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/compensate/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "compensate", "{{taskId}}"]
            },
            "description": "Create a compensation task for a failed task"
          },
          "response": []
        },
        {
          "name": "Get Failed Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/failed-tasks",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "failed-tasks"]
            },
            "description": "Get all failed tasks"
          },
          "response": []
        },
        {
          "name": "Get Retryable Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/retryable-tasks",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "retryable-tasks"]
            },
            "description": "Get tasks that can be retried (failed tasks that haven't exceeded max retries)"
          },
          "response": []
        },
        {
          "name": "Get Compensation Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/compensation-tasks",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "compensation-tasks"]
            },
            "description": "Get all compensation tasks"
          },
          "response": []
        },
        {
          "name": "Get Fault Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/faults/stats",
              "host": ["{{baseUrl}}"],
              "path": ["faults", "stats"]
            },
            "description": "Get fault management statistics including error types and retry counts"
          },
          "response": []
        }
      ],
      "description": "Fault management and error handling operations"
    },
    {
      "name": "Workflow Management",
      "item": [
        {
          "name": "Create Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invoice Generation Workflow\",\n  \"definition\": {\n    \"initialTask\": {\n      \"type\": \"fetch_orders\",\n      \"payload\": {\n        \"customerId\": \"{{customerId}}\"\n      }\n    },\n    \"transitions\": {\n      \"fetch_orders\": {\n        \"type\": \"create_invoice\",\n        \"payload\": {\n          \"customerId\": \"{{customerId}}\"\n        }\n      },\n      \"create_invoice\": {\n        \"type\": \"generate_pdf\",\n        \"payload\": {\n          \"customerId\": \"{{customerId}}\"\n        }\n      },\n      \"generate_pdf\": {\n        \"type\": \"send_email\",\n        \"payload\": {\n          \"customerId\": \"{{customerId}}\"\n        }\n      }\n    }\n  },\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workflows",
              "host": ["{{baseUrl}}"],
              "path": ["workflows"]
            },
            "description": "Create a new workflow with task definitions and transitions"
          },
          "response": []
        },
        {
          "name": "Get All Workflows",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows",
              "host": ["{{baseUrl}}"],
              "path": ["workflows"]
            },
            "description": "Get all workflows in the system"
          },
          "response": []
        },
        {
          "name": "Get Active Workflows",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/active",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "active"]
            },
            "description": "Get only active workflows"
          },
          "response": []
        },
        {
          "name": "Get Workflow by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Get a specific workflow by its ID"
          },
          "response": []
        },
        {
          "name": "Get Workflow with Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/with-tasks",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "with-tasks"]
            },
            "description": "Get workflow details including all associated tasks"
          },
          "response": []
        },
        {
          "name": "Update Workflow",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Invoice Workflow\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Update an existing workflow"
          },
          "response": []
        },
        {
          "name": "Delete Workflow",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}"]
            },
            "description": "Delete a workflow (only if it has no associated tasks)"
          },
          "response": []
        },
        {
          "name": "Start Workflow",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/start",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "start"]
            },
            "description": "Start a workflow execution"
          },
          "response": []
        },
        {
          "name": "Activate Workflow",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/activate",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "activate"]
            },
            "description": "Activate a workflow"
          },
          "response": []
        },
        {
          "name": "Deactivate Workflow",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/deactivate",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "deactivate"]
            },
            "description": "Deactivate a workflow"
          },
          "response": []
        },
        {
          "name": "Get Workflow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workflows/{{workflowId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["workflows", "{{workflowId}}", "status"]
            },
            "description": "Get detailed status of a workflow including task progress"
          },
          "response": []
        }
      ],
      "description": "Workflow management and orchestration operations"
    },
    {
      "name": "Examples",
      "item": [
        {
          "name": "Database Seeding Workflow (Default)",
          "item": [
            {
              "name": "1. Seed Database (Default)",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/seeder/seed",
                  "host": ["{{baseUrl}}"],
                  "path": ["seeder", "seed"]
                },
                "description": "Step 1: Seed the database with default configuration (3 workflows, 5 tasks per type, 10 customers)"
              },
              "response": []
            },
            {
              "name": "2. Verify Seeded Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks"]
                },
                "description": "Step 2: Verify that the database was seeded with tasks"
              },
              "response": []
            },
            {
              "name": "3. Start Invoice Workflow",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/invoice/workflow/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "workflow", "start"]
                },
                "description": "Step 3: Start an invoice workflow using the seeded data"
              },
              "response": []
            },
            {
              "name": "4. Check Workflow Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "status", "{{customerId}}"]
                },
                "description": "Step 4: Check the status of the invoice workflow"
              },
              "response": []
            }
          ],
          "description": "Complete workflow example using default database seeding"
        },
        {
          "name": "Database Seeding Workflow (Light)",
          "item": [
            {
              "name": "1. Seed Database (Light)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workflows\": 1,\n  \"tasksPerType\": 2,\n  \"customers\": 3\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/seeder/seed",
                  "host": ["{{baseUrl}}"],
                  "path": ["seeder", "seed"]
                },
                "description": "Step 1: Seed the database with light configuration for quick testing"
              },
              "response": []
            },
            {
              "name": "2. Verify Seeded Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks"]
                },
                "description": "Step 2: Verify that the database was seeded with tasks"
              },
              "response": []
            },
            {
              "name": "3. Start Invoice Workflow",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/invoice/workflow/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "workflow", "start"]
                },
                "description": "Step 3: Start an invoice workflow using the seeded data"
              },
              "response": []
            },
            {
              "name": "4. Check Workflow Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "status", "{{customerId}}"]
                },
                "description": "Step 4: Check the status of the invoice workflow"
              },
              "response": []
            }
          ],
          "description": "Quick testing workflow using light database seeding"
        },
        {
          "name": "Database Seeding Workflow (Custom)",
          "item": [
            {
              "name": "1. Seed Database (Custom)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workflows\": {{seederWorkflows}},\n  \"tasksPerType\": {{seederTasksPerType}},\n  \"customers\": {{seederCustomers}}\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/seeder/seed",
                  "host": ["{{baseUrl}}"],
                  "path": ["seeder", "seed"]
                },
                "description": "Step 1: Seed the database with custom configuration using environment variables"
              },
              "response": []
            },
            {
              "name": "2. Verify Seeded Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks"]
                },
                "description": "Step 2: Verify that the database was seeded with tasks"
              },
              "response": []
            },
            {
              "name": "3. Start Invoice Workflow",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"{{workflowId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/invoice/workflow/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "workflow", "start"]
                },
                "description": "Step 3: Start an invoice workflow using the seeded data"
              },
              "response": []
            },
            {
              "name": "4. Check Workflow Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/status/{{customerId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "status", "{{customerId}}"]
                },
                "description": "Step 4: Check the status of the invoice workflow"
              },
              "response": []
            }
          ],
          "description": "Custom workflow using configurable database seeding"
        },
        {
          "name": "Create HTTP Request Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"http_request\",\n  \"payload\": {\n    \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Accept\": \"application/json\"\n    },\n    \"timeout\": 5000\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create an HTTP request task to fetch data from an external API"
          },
          "response": []
        },
        {
          "name": "Create Data Processing Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"data_processing\",\n  \"payload\": {\n    \"dataSource\": \"customer-orders\",\n    \"processType\": \"aggregation\",\n    \"filters\": {\n      \"dateRange\": {\n        \"from\": \"2024-01-01\",\n        \"to\": \"2024-01-31\"\n      },\n      \"status\": \"completed\"\n    },\n    \"outputFormat\": \"json\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create a data processing task for aggregating customer orders"
          },
          "response": []
        },
        {
          "name": "Create Fetch Orders Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"fetch_orders\",\n  \"payload\": {\n    \"customerId\": \"customer-123\",\n    \"dateFrom\": \"2024-01-01\",\n    \"dateTo\": \"2024-01-31\",\n    \"ninoxConfig\": {\n      \"baseUrl\": \"https://your-ninox-instance.com\",\n      \"apiKey\": \"{{ninoxApiKey}}\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Example: Create a task to fetch orders from Ninox database"
          },
          "response": []
        },
        {
          "name": "Test All Task Types",
          "item": [
            {
              "name": "1. Seed with All Task Types",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workflows\": 3,\n  \"tasksPerType\": 3,\n  \"customers\": 5\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/seeder/seed",
                  "host": ["{{baseUrl}}"],
                  "path": ["seeder", "seed"]
                },
                "description": "Step 1: Seed database with all task types (HTTP_REQUEST, DATA_PROCESSING, COMPENSATION, FETCH_ORDERS, CREATE_INVOICE, GENERATE_PDF, SEND_EMAIL)"
              },
              "response": []
            },
            {
              "name": "2. Get Tasks by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks"]
                },
                "description": "Step 2: View all seeded tasks with different types and statuses"
              },
              "response": []
            },
            {
              "name": "3. Check Queue Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/queue-manager/status",
                  "host": ["{{baseUrl}}"],
                  "path": ["queue-manager", "status"]
                },
                "description": "Step 3: Check queue status to see distribution of task types and statuses"
              },
              "response": []
            }
          ],
          "description": "Test workflow to verify all task types are properly seeded with realistic data"
        },
        {
          "name": "Create Invoice Workflow - Complete Example",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"dateFrom\": \"2024-01-01\",\n  \"dateTo\": \"2024-01-31\",\n  \"workflowId\": \"invoice-workflow-2024-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/start",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "start"]
            },
            "description": "Complete example: Start a full invoice workflow that will fetch orders, create invoice, generate PDF, and send email"
          },
          "response": []
        },
        {
          "name": "Daily Recurring Invoice Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"cronExpression\": \"0 0 * * *\",\n  \"dateFrom\": \"{{$timestamp}}\",\n  \"dateTo\": \"{{$timestamp}}\",\n  \"workflowId\": \"daily-invoice-workflow\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/workflow/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "workflow", "recurring"]
            },
            "description": "Example: Create a daily recurring invoice workflow that runs at midnight every day"
          },
          "response": []
        },
        {
          "name": "Weekly Email Reminder",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"invoiceId\": \"invoice-123\",\n  \"scheduledAt\": \"2024-01-20T10:00:00Z\",\n  \"workflowId\": \"weekly-email-reminder\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoice/email/scheduled",
              "host": ["{{baseUrl}}"],
              "path": ["invoice", "email", "scheduled"]
            },
            "description": "Example: Schedule a weekly email reminder for an invoice"
          },
          "response": []
        },
        {
          "name": "Fault Management Workflow",
          "item": [
            {
              "name": "1. Get Failed Tasks",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/faults/failed-tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["faults", "failed-tasks"]
                },
                "description": "Step 1: Get all failed tasks in the system"
              },
              "response": []
            },
            {
              "name": "2. Retry Failed Task",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/faults/retry/{{taskId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["faults", "retry", "{{taskId}}"]
                },
                "description": "Step 2: Retry a specific failed task"
              },
              "response": []
            },
            {
              "name": "3. Get Fault Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/faults/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["faults", "stats"]
                },
                "description": "Step 3: Get fault management statistics"
              },
              "response": []
            }
          ],
          "description": "Complete workflow for managing failed tasks and fault handling"
        },
        {
          "name": "Workflow Management Example",
          "item": [
            {
              "name": "1. Create Workflow",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test Invoice Workflow\",\n  \"definition\": {\n    \"initialTask\": {\n      \"type\": \"fetch_orders\",\n      \"payload\": {\n        \"customerId\": \"{{customerId}}\"\n      }\n    },\n    \"transitions\": {\n      \"fetch_orders\": {\n        \"type\": \"create_invoice\",\n        \"payload\": {\n          \"customerId\": \"{{customerId}}\"\n        }\n      }\n    }\n  },\n  \"isActive\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/workflows",
                  "host": ["{{baseUrl}}"],
                  "path": ["workflows"]
                },
                "description": "Step 1: Create a new workflow"
              },
              "response": []
            },
            {
              "name": "2. Get Workflow Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/workflows/{{workflowId}}/status",
                  "host": ["{{baseUrl}}"],
                  "path": ["workflows", "{{workflowId}}", "status"]
                },
                "description": "Step 2: Check the status of the created workflow"
              },
              "response": []
            },
            {
              "name": "3. Start Workflow",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/workflows/{{workflowId}}/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["workflows", "{{workflowId}}", "start"]
                },
                "description": "Step 3: Start the workflow execution"
              },
              "response": []
            }
          ],
          "description": "Complete workflow for creating and managing workflows"
        },
        {
          "name": "Invoice Statistics Workflow",
          "item": [
            {
              "name": "1. Get Invoice Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "stats"]
                },
                "description": "Step 1: Get comprehensive invoice workflow statistics"
              },
              "response": []
            },
            {
              "name": "2. Get Customers with Invoices",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/customers",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "customers"]
                },
                "description": "Step 2: Get all customers with invoice workflows"
              },
              "response": []
            },
            {
              "name": "3. Get Invoice Workflows",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/invoice/workflows",
                  "host": ["{{baseUrl}}"],
                  "path": ["invoice", "workflows"]
                },
                "description": "Step 3: Get all invoice workflows"
              },
              "response": []
            }
          ],
          "description": "Complete workflow for monitoring invoice statistics and customer data"
        }
      ],
      "description": "Practical examples for common use cases"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3030/api",
      "type": "string"
    }
  ]
}
